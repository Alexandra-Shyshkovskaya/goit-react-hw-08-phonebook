{"version":3,"sources":["Components/SearchFilter/Filter.module.css","Components/Container/Container.module.css","Components/Container/Container.js","redux/contact/contact-action.js","redux/contact/contact-types.js","redux/contact/contact-operations.js","redux/contact/contact-reducer.js","Components/ContactsForm/ContactsForm.js","redux/contact/contact-selectors.js","Components/SearchFilter/Filter.js","Components/ContactsList/ContactsList.js","App.js","redux/store.js","index.js","Components/ContactsForm/ContactsForm.module.css","Components/ContactsList/ContactsList.module.css"],"names":["module","exports","Container","children","className","styles","defaultProps","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","dispatch","a","get","data","contactForm","contact","name","number","post","then","catch","error","id","delete","items","createReducer","_","payload","state","find","alert","filter","loading","combineReducers","ContactForm","handleChange","event","currentTarget","value","setState","reset","handleSubmit","preventDefault","props","addContacts","this","style","onSubmit","label","input","onChange","type","pattern","title","required","placeholder","labelNumber","button","Component","connect","contactOperations","getLoading","contacts","getFilter","getVisibleContacts","createSelector","allContacts","normalizedFilter","toLowerCase","includes","onHandleChange","deleteContacts","list","map","item","textName","textNumber","onClick","App","fetchContacts","isLoadingContacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,mBCAxDD,EAAOC,QAAU,CAAC,UAAY,+B,wKCG9B,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAOH,UAAvB,SAAmCC,IAG5CD,EAAUI,aAAe,CACvBH,SAAU,IAOGD,Q,wECbFK,EAAsBC,YAAa,gCACnCC,EAAsBD,YAAa,gCACnCE,EAAoBF,YAAa,8BAEjCG,EAAoBH,YAAa,8BACjCI,EAAoBJ,YAAa,8BACjCK,EAAkBL,YAAa,4BAE/BM,EAAuBN,YAClC,iCAEWO,EAAuBP,YAClC,iCAEWQ,EAAqBR,YAAa,+BAElCS,EAAeT,YCfX,kBCSjBU,IAAMC,SAASC,QAAU,wBAEzB,I,IAoCe,EApCM,yDAAM,WAAMC,GAAN,iBAAAC,EAAA,6DACzBD,EAASd,KADgB,kBAIAW,IAAMK,IAAI,aAJV,gBAIfC,EAJe,EAIfA,KACRH,EAASZ,EAAoBe,IALN,gDAOvBH,EAASX,EAAkB,EAAD,KAPH,yDAAN,uDAoCN,EApBK,SAAAe,GAAW,OAAI,SAAAJ,GACjC,IAAMK,EAAU,CACdC,KAAMF,EAAYE,KAClBC,OAAQH,EAAYG,QAEtBP,EAASV,KACTO,IACGW,KAAK,YAAaH,GAClBI,MAAK,gBAAGN,EAAH,EAAGA,KAAH,OAAcH,EAAST,EAAkBY,OAC9CO,OAAM,SAAAC,GAAK,OAAIX,EAASR,EAAgBmB,SAW9B,EARQ,SAAAC,GAAE,OAAI,SAAAZ,GAC3BA,EAASP,KACTI,IACGgB,OADH,oBACuBD,IACpBH,MAAK,kBAAMT,EAASN,EAAqBkB,OACzCF,OAAM,SAAAC,GAAK,OAAIX,EAASL,EAAmBgB,S,eCjC1CG,EAAQC,YAAc,IAAD,mBACxB3B,GAAsB,SAAC4B,EAAD,YAAMC,WADJ,cAExB1B,GAAoB,SAAC2B,EAAD,OAAUD,EAAV,EAAUA,QAAV,OACnBC,EAAMC,MAAK,qBAAGb,OAAoBW,EAAQX,QACtCc,MAAM,GAAD,OAAIF,EAAMZ,KAAV,4BADT,CAEKW,GAFL,mBAEiBC,OALM,cAMxBxB,GAAuB,SAACwB,EAAD,OAAUD,EAAV,EAAUA,QAAV,OACtBC,EAAMG,QAAO,qBAAGT,KAAgBK,QAPT,IAUrBK,EAAUP,aAAc,GAAD,mBAC1B7B,GAAsB,kBAAM,KADF,cAE1BE,GAAsB,kBAAM,KAFF,cAG1BC,GAAoB,kBAAM,KAHA,cAK1BC,GAAoB,kBAAM,KALA,cAM1BC,GAAoB,kBAAM,KANA,cAO1BC,GAAkB,kBAAM,KAPE,cAS1BC,GAAuB,kBAAM,KATH,cAU1BC,GAAuB,kBAAM,KAVH,cAW1BC,GAAqB,kBAAM,KAXD,IAcvB0B,EAASN,YAAc,GAAD,eACzBnB,GAAe,SAACoB,EAAD,YAAMC,YAGlBN,EAAQI,YAAc,KAAM,IAEnBQ,cAAgB,CAC7BT,QACAO,SACAC,UACAX,UC5CIa,E,4MACJN,MAAQ,CACNZ,KAAM,GACNC,OAAQ,I,EAGZkB,aAAe,SAAAC,GACX,MAAwBA,EAAMC,cAAtBrB,EAAR,EAAQA,KAAMsB,EAAd,EAAcA,MACd,EAAKC,SAAL,eACGvB,EAAOsB,K,EAIZE,MAAQ,WACN,EAAKD,SAAS,CAAEvB,KAAM,GAAIC,OAAQ,M,EAGpCwB,aAAe,SAAAL,GACbA,EAAMM,iBAEN,EAAKC,MAAMC,YAAY,EAAKhB,OAC5B,EAAKY,S,4CAGP,WACE,MAAyBK,KAAKjB,MAAtBZ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAEd,OACE,uBAAMxB,UAAWqD,IAAMZ,YAAaa,SAAUF,KAAKJ,aAAnD,UACE,uBAAOhD,UAAWqD,IAAME,MAAxB,kBACA,uBACEvD,UAAWqD,IAAMG,MACjBX,MAAOtB,EACPkC,SAAUL,KAAKV,aACfgB,KAAK,OACLnC,KAAK,OACLoC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,YAAY,kEAEd,uBAAO9D,UAAWqD,IAAMU,YAAxB,oBACA,uBACE/D,UAAWqD,IAAMG,MACjBX,MAAOrB,EACPiC,SAAUL,KAAKV,aACfgB,KAAK,MACLnC,KAAK,SACLoC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,YAAY,+HAEd,wBAAQJ,KAAK,SAAS1D,UAAWqD,IAAMW,OAAvC,gC,GArDkBC,aAiEXC,cAAQ,MAJI,SAAAjD,GAAQ,MAAK,CACtCkC,YAAa,SAAA9B,GAAW,OACtBJ,EAASkD,EAA8B9C,QAE5B6C,CAAkCzB,G,yBCpEpC2B,EAAa,SAAAjC,GAAK,OAAIA,EAAMkC,SAAS9B,SACrC+B,GAAY,SAAAnC,GAAK,OAAIA,EAAMkC,SAAS/B,QAEpCiC,GAAqBC,YAChC,CAF4B,SAAArC,GAAK,OAAIA,EAAMkC,SAAStC,OAEnCuC,KACjB,SAACG,EAAanC,GACZ,IAAMoC,EAAmBpC,EAAOqC,cAEhC,OAAOF,EAAYnC,QAAO,qBAAGf,KACtBoD,cAAcC,SAASF,SCuBnBR,gBAPS,SAAA/B,GAAK,MAAK,CAChCG,OAAQgC,GAAUnC,OAEO,SAAAlB,GAAQ,MAAK,CACtC4D,eAAgB,SAAAlC,GAAK,OAAI1B,EAASJ,EAAa8B,EAAMC,cAAcC,YAGtDqB,EA3BA,SAAC,GAAgC,IAA9B5B,EAA6B,EAA7BA,OAAQuC,EAAqB,EAArBA,eACxB,OACE,gCACE,oBAAI7E,UAAWqD,IAAMO,MAArB,mCACA,uBACEF,KAAK,OACLnC,KAAK,SACLsB,MAAOP,EACPmB,SAAUoB,EACV7E,UAAWqD,IAAMG,c,mBC0BVU,gBARS,SAAA/B,GAAK,MAAK,CAChCkC,SAAUE,GAAmBpC,OAGJ,SAAAlB,GAAQ,MAAK,CACtC6D,eAAgB,SAAAjD,GAAE,OAAIZ,EAASkD,EAAiCtC,QAGnDqC,EAnCM,SAAC,GAAkC,IAAhCG,EAA+B,EAA/BA,SAAUS,EAAqB,EAArBA,eAChC,OACE,oBAAI9E,UAAWqD,KAAM0B,KAArB,SACGV,EAASW,KAAI,gBAAGnD,EAAH,EAAGA,GAAIN,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAaxB,UAAWqD,KAAM4B,KAA9B,UACE,mBAAGjF,UAAWqD,KAAM6B,SAApB,SAA+B3D,IAC/B,mBAAGvB,UAAWqD,KAAM8B,WAApB,SAAiC3D,IACjC,wBAAQkC,KAAK,SAAS1D,UAAWqD,KAAMW,OAAQoB,QAAS,kBAAMN,EAAejD,IAA7E,sBAHOA,WCFXwD,G,uKACJ,WACEjC,KAAKF,MAAMoC,kB,oBAEb,WACE,OACE,mCACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,IACA,0CACA,cAAC,GAAD,IACElC,KAAKF,MAAMqC,mBAAqB,4CAClC,cAAC,GAAD,a,GAbQtB,aA2BHC,gBAPS,SAAA/B,GAAK,MAAK,CAChCoD,kBAAmBnB,EAAWjC,OAEL,SAAAlB,GAAQ,MAAK,CACtCqE,cAAe,kBAAMrE,EAASkD,SAGjBD,CAA6CmB,I,oCCtBtDG,GAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,UAHhD,CAMdC,OAoBaC,GAXDC,YAAe,CAC3BC,QAAS,CACPhC,SAAUiC,GAEZd,WAAYA,GACZe,UAAUC,ICxBZC,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SAEE,cAAC,GAAD,QAIJS,SAASC,eAAe,U,kBClB1BjH,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,MAAQ,4BAA4B,OAAS,6BAA6B,YAAc,oC,kBCA9LD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,KAAO,2BAA2B,SAAW,+BAA+B,WAAa,iCAAiC,OAAS,gC","file":"static/js/main.2c2c1645.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__3uSJn\",\"input\":\"Filter_input__1YLdO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container___MQpf\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Container.module.css\";\n\nfunction Container({ children }) {\n  return <div className={styles.Container}>{children}</div>;\n}\n\nContainer.defaultProps = {\n  children: [],\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import types from './contact-types';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction(types.CHANGE_FILTER);","// eslint-disable-next-line\nexport default {\n  ADD: 'contact/add',\n  DELETE: 'contact/delete',\n  CHANGE_FILTER: 'contact/filter',\n};","import axios from 'axios';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contact-action';\n\naxios.defaults.baseURL = 'http://localhost:3000';\n\nconst fetchContact = () => async dispatch => {\n  dispatch(fetchContactRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error));\n  }\n\n  // axios\n  //   .get('/contacts')\n  //   .then(({ data }) => dispatch(fetchContactSuccess(data)))\n  //   .catch(error => dispatch(fetchContactError(error)));\n};\n\nconst addContacts = contactForm => dispatch => {\n  const contact = {\n    name: contactForm.name,\n    number: contactForm.number,\n  };\n  dispatch(addContactRequest());\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nconst deleteContacts = id => dispatch => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n// eslint-disable-next-line \nexport default { fetchContact, addContacts, deleteContacts };","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './contact-action';\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) =>\n    state.find(({ name }) => name === payload.name)\n      ? alert(`${state.name} is already in contacts`)\n      : [payload, ...state],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});","import React, { Component } from 'react';\nimport style from \"./ContactsForm.module.css\";\nimport { connect } from 'react-redux';\nimport { contactOperations } from '../../redux/contact';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\nhandleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n  \n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n  \n    this.props.addContacts(this.state);\n    this.reset();\n  };\n  \n  render() {\n    const { name, number } = this.state;\n  \n    return (\n      <form className={style.ContactForm} onSubmit={this.handleSubmit}>\n        <label className={style.label}>Name</label>\n        <input\n          className={style.input}\n          value={name}\n          onChange={this.handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          placeholder=\"Введите имя\"\n        />\n        <label className={style.labelNumber}>Number</label>\n        <input\n          className={style.input}\n          value={number}\n          onChange={this.handleChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          placeholder=\"Введите номер телефона\"\n        />\n        <button type=\"submit\" className={style.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addContacts: contactForm =>\n    dispatch(contactOperations.addContacts(contactForm)),\n});\nexport default connect(null, mapDispatchToProps)(ContactForm);","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getLoading = state => state.contacts.loading;\nexport const getFilter = state => state.contacts.filter;\nexport const getAllContacts = state => state.contacts.items;\nexport const getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (allContacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return allContacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/contact/contact-action';\nimport style from './Filter.module.css';\nimport PropTypes from \"prop-types\";\nimport { getFilter } from '../../redux/contact/contact-selectors';\n\nconst Filter = ({ filter, onHandleChange }) => {\n  return (\n    <div>\n      <h3 className={style.title}>Find contacts by name</h3>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onHandleChange}\n        className={style.input}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onHandleChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filter: getFilter(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  onHandleChange: event => dispatch(changeFilter(event.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { contactOperations } from '../../redux/contact';\nimport style from \"./ContactsList.module.css\";\nimport PropTypes from \"prop-types\";\nimport { getVisibleContacts } from '../../redux/contact/contact-selectors';\n\nconst ContactsList = ({ contacts, deleteContacts }) => {\n  return (\n    <ul className={style.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={style.item}>\n          <p className={style.textName}>{name}</p>\n          <p className={style.textNumber}>{number}</p>\n          <button type=\"button\" className={style.button} onClick={() => deleteContacts(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  deleteContacts: PropTypes.func,\n};\n\n\nconst mapStateToProps = state => ({\n  contacts: getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteContacts: id => dispatch(contactOperations.deleteContacts(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Container from \"./Components/Container\";\nimport ContactForm from \"./Components/ContactsForm\";\nimport Filter from \"./Components/SearchFilter\";\nimport ContactList from \"./Components/ContactsList\";\nimport contactOperations from './redux/contact/contact-operations';\nimport { getLoading } from './redux/contact/contact-selectors';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n  render() {\n    return (\n      <>\n        <Container>\n          <h1>Phonebook</h1>\n          <ContactForm />\n          <h2>Contacts</h2>\n          <Filter />\n           {this.props.isLoadingContacts && <h1>Loading...</h1>}\n          <ContactList />\n        </Container>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoadingContacts: getLoading(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactOperations.fetchContact()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport { contactReducer } from './contact';\nimport {\n  //persistStore,\n  //persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n/* const contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n}; */\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n  middleware: middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n//const persistor = persistStore(store);\n//export default { store, persistor };\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//import { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Provider store={store.store}> */}\n    <Provider store={store}>\n    {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n    {/* </PersistGate> */}\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactsForm_ContactForm__2FSEU\",\"label\":\"ContactsForm_label__17ZBM\",\"input\":\"ContactsForm_input__28xkd\",\"button\":\"ContactsForm_button__2XljB\",\"labelNumber\":\"ContactsForm_labelNumber__1ROgR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__CJiTZ\",\"item\":\"ContactsList_item__3sEFV\",\"textName\":\"ContactsList_textName__Z3vQp\",\"textNumber\":\"ContactsList_textNumber__3e2AO\",\"button\":\"ContactsList_button__2Yp3i\"};"],"sourceRoot":""}