{"version":3,"sources":["views/RegisterView/RegisterView.module.css","views/RegisterView/RegisterView.js"],"names":["module","exports","RegisterView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","onSubmit","className","style","form","autoComplete","label","type","input","onChange","button","Component","mapDispatchToProps","authOperations","register","connect"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,MAAQ,4BAA4B,MAAQ,4BAA4B,OAAS,+B,0KCI/HC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMC,WAAW,EAAKZ,OAE3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGjD,WACE,MAAkCU,KAAKb,MAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,SAErB,OACE,8BACE,uBACEW,SAAUD,KAAKL,aACfO,UAAWC,IAAMC,KACjBC,aAAa,MAHf,UAKE,wBAAOH,UAAWC,IAAMG,MAAxB,iBAEE,uBACEC,KAAK,OACLnB,KAAK,OACLK,MAAOL,EACPc,UAAWC,IAAMK,MACjBC,SAAUT,KAAKT,kBAInB,wBAAOW,UAAWC,IAAMG,MAAxB,mBAEE,uBACEC,KAAK,QACLnB,KAAK,QACLK,MAAOJ,EACPa,UAAWC,IAAMK,MACjBC,SAAUT,KAAKT,kBAInB,wBAAOW,UAAWC,IAAMG,MAAxB,qBAEE,uBACEC,KAAK,WACLnB,KAAK,WACLK,MAAOH,EACPY,UAAWC,IAAMK,MACjBC,SAAUT,KAAKT,kBAInB,wBAAQgB,KAAK,SAASL,UAAWC,IAAMO,OAAvC,8B,GA9DiBC,aAqErBC,EAAqB,CACzBb,WAAYc,IAAeC,UAGdC,cAAQ,KAAMH,EAAdG,CAAkC7B","file":"static/js/6.d7802c06.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegisterView_form__jLkqR\",\"label\":\"RegisterView_label__3FXZM\",\"input\":\"RegisterView_input__1haMV\",\"button\":\"RegisterView_button__xljmR\"};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { authOperations } from '../../redux/auth';\nimport style from './RegisterView.module.css';\n\nclass RegisterView extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onRegister(this.state);\n\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  render() {\n    const { name, email, password } = this.state;\n\n    return (\n      <div>\n        <form\n          onSubmit={this.handleSubmit}\n          className={style.form}\n          autoComplete=\"off\"\n        >\n          <label className={style.label}>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              className={style.input}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label className={style.label}>\n            E-mail\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              className={style.input}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label className={style.label}>\n            Password\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              className={style.input}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <button type=\"submit\" className={style.button}>Sign up</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onRegister: authOperations.register,\n};\n\nexport default connect(null, mapDispatchToProps)(RegisterView);"],"sourceRoot":""}