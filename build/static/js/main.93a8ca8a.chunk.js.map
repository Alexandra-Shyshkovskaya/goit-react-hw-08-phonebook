{"version":3,"sources":["Components/Container/Container.js","Components/Navigation/Navigation.js","Components/UserMenu/default-avatar.png","Components/UserMenu/UserMenu.js","Components/AuthNav/AuthNav.js","Components/AppBar/AppBar.js","Components/PrivateRoute.js","Components/PublicRoute.js","Components/Backdrop/Backdrop.js","App.js","redux/store.js","index.js","Components/AuthNav/AuthNav.module.css","Components/Navigation/Navigation.module.css","Components/UserMenu/UserMenu.module.css","Components/Backdrop/Backdrop.module.css","redux/contact/contact-operations.js","redux/contact/contact-reducer.js","Components/Container/Container.module.css","Components/AppBar/AppBar.module.css","redux/contact/contact-types.js","redux/contact/contact-action.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js"],"names":["Container","children","className","styles","defaultProps","connect","state","isAuthenticated","authSelectors","getIsAuthenticated","to","exact","style","link","activeClassName","active","mapDispatchToProps","onLogout","authOperations","logOut","name","getUsername","avatar","defaultAvatar","container","src","alt","width","type","onClick","AuthNav","activeLink","header","Component","component","redirectTo","routeProps","render","props","restricted","backdropRoot","document","querySelector","Backdrop","createPortal","backdrop","color","height","load","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurrentUser","fallback","path","getCurrentUser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","loading","getElementById","module","exports","fetchContact","dispatch","a","fetchContactRequest","axios","get","data","fetchContactSuccess","fetchContactError","addContacts","contactForm","contact","number","addContactRequest","post","then","addContactSuccess","catch","error","addContactError","message","deleteContacts","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","items","createReducer","_","payload","find","alert","filter","changeFilter","combineReducers","createAction","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","user","authActions","token","setError","defaults","baseURL","headers","common","Authorization","register","credentials","response","logIn","getState","persistedToken"],"mappings":"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","file":"static/js/main.93a8ca8a.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Container.module.css\";\n\nfunction Container({ children }) {\n  return <div className={styles.Container}>{children}</div>;\n}\n\nContainer.defaultProps = {\n  children: [],\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { authSelectors } from '../../redux/auth';\nimport style from './Navigation.module.css';\n\nconst Navigation = ({ isAuthenticated }) => (\n  <nav>\n    <NavLink to=\"/\" exact className={style.link} activeClassName={style.active}>\n      Home\n    </NavLink>\n\n    {isAuthenticated && (\n      <NavLink\n        to=\"/contacts\"\n        exact\n        className={style.link}\n        activeClassName={style.active}\n      >\n        Contacts\n      </NavLink>\n    )}\n  </nav>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);","export default __webpack_public_path__ + \"static/media/default-avatar.0c07a2e4.png\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport defaultAvatar from './default-avatar.png';\nimport style from './UserMenu.module.css';\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div className={style.container}>\n    <img src={avatar} alt=\"\" width=\"32\" className={style.avatar} />\n    <span className={style.name}>Welcome, {name}</span>\n    <button type=\"button\" onClick={onLogout}>\n      Logout\n    </button>\n  </div>\n);\nconst mapStateToProps = state => ({\n  name: authSelectors.getUsername(state),\n  avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport style from './AuthNav.module.css';\n\nconst AuthNav = () => (\n  <div className={style.container}>\n    <NavLink\n      to=\"/register\"\n      exact\n      className={style.link}\n      activeClassName={style.activeLink}\n    >\n      Sign Up\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      className={style.link}\n      activeClassName={style.activeLink}\n    >\n      Log In\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;","import React from 'react';\nimport style from './AppBar.module.css';\nimport Navigation from '../Navigation';\nimport UserMenu from '../UserMenu';\nimport AuthNav from '../AuthNav';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header className={style.header}>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(AppBar);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport style from './Backdrop.module.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\n\nconst backdropRoot = document.querySelector('#backdrop-root');\n\nexport default class Backdrop extends Component {\n  render() {\n    return createPortal(\n      <div className={style.backdrop}>\n        <Loader\n          type=\"Rings\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          className={style.load}\n        />\n      </div>,\n      backdropRoot,\n    );\n  }\n}","import React, { Component, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { authOperations } from './redux/auth';\nimport { connect } from 'react-redux';\nimport Container from './Components/Container';\nimport AppBar from './Components/AppBar';\nimport PrivateRoute from './Components/PrivateRoute';\nimport PublicRoute from './Components/PublicRoute';\nimport Backdrop from './Components/Backdrop';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n  render() {\n    return (\n      <Container>\n        <AppBar />\n        <Suspense fallback={<Backdrop />}>\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomeView} />\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={RegisterView}\n            />\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={LoginView}\n            />\n            <PrivateRoute\n              path=\"/contacts\"\n              redirectTo=\"/login\"\n              component={ContactsView}\n            />\n          </Switch>\n        </Suspense>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n//import logger from 'redux-logger';\n//import { contactReducer } from './contact';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { contactReducer } from './contact';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n}; \n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactReducer,\n  },\n  middleware: middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n// eslint-disable-next-line \nexport default { store, persistor };\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n    <PersistGate loading={null} persistor={store.persistor}>\n     <BrowserRouter> \n          <App />\n        </BrowserRouter>\n    </PersistGate>\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AuthNav_container__27TP2\",\"link\":\"AuthNav_link__32esy\",\"activeLink\":\"AuthNav_activeLink__2aP--\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__1MfoW\",\"active\":\"Navigation_active__hKnsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__1GauQ\",\"avatar\":\"UserMenu_avatar__3heuK\",\"name\":\"UserMenu_name__QUwnb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Backdrop_backdrop__2EZre\",\"load\":\"Backdrop_load__IgwM1\"};","import axios from 'axios';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contact-action';\n\n//axios.defaults.baseURL = 'http://localhost:3000';\n\nconst fetchContact = () => async dispatch => {\n  dispatch(fetchContactRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error));\n  }\n\n  // axios\n  //   .get('/contacts')\n  //   .then(({ data }) => dispatch(fetchContactSuccess(data)))\n  //   .catch(error => dispatch(fetchContactError(error)));\n};\n\nconst addContacts = contactForm => dispatch => {\n  const contact = {\n    name: contactForm.name,\n    number: contactForm.number,\n  };\n  dispatch(addContactRequest());\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error.message)));\n};\n\nconst deleteContacts = id => dispatch => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error.message)));\n};\n// eslint-disable-next-line \nexport default { fetchContact, addContacts, deleteContacts };","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './contact-action';\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) =>\n    state.find(({ name }) => name === payload.name)\n      ? alert(`${state.name} is already in contacts`)\n      : [payload, ...state],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container___MQpf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__mjMCE\"};","// eslint-disable-next-line\nexport default {\n  ADD: 'contact/add',\n  DELETE: 'contact/delete',\n  CHANGE_FILTER: 'contact/filter',\n};","import types from './contact-types';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction(types.CHANGE_FILTER);","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n// eslint-disable-next-line \nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n\n  [authActions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n// eslint-disable-next-line \nexport default { register, logIn, logOut, getCurrentUser };","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUsername = state => state.auth.user.name;\n// eslint-disable-next-line \nexport default {\n  getIsAuthenticated,\n  getUsername,\n};"],"sourceRoot":""}