{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContacts, deleteContacts, changeFilter } from './contact-action';\nconst items = createReducer([], {\n  [action.addContacts]: (state, {\n    payload\n  }) => state.find(({\n    name\n  }) => name === payload.name) ? alert(`${state.name} is already in contacts`) : [payload, ...state],\n  [action.deleteContacts]: (state, {\n    payload\n  }) => state.filter(({\n    id\n  }) => id !== payload)\n});\nconst filter = createReducer('', {\n  [action.changeFilter]: (_, {\n    payload\n  }) => payload\n});\nexport default combineReducers({\n  items,\n  filter\n});","map":{"version":3,"sources":["/Users/janakozachka/Documents/GitHub/goit-react-hw-06-phonebook/src/redux/contact/contact-reducer.js"],"names":["combineReducers","createReducer","addContacts","deleteContacts","changeFilter","items","action","state","payload","find","name","alert","filter","id","_"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAAQC,WAAR,EAAqBC,cAArB,EAAqCC,YAArC,QAAyD,kBAAzD;AAEA,MAAMC,KAAK,GAAGJ,aAAa,CAAC,EAAD,EAAK;AAC9B,GAACK,MAAM,CAACJ,WAAR,GAAsB,CAACK,KAAD,EAAQ;AAAEC,IAAAA;AAAF,GAAR,KACpBD,KAAK,CAACE,IAAN,CAAW,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAcA,IAAI,KAAKF,OAAO,CAACE,IAA1C,IACIC,KAAK,CAAE,GAAEJ,KAAK,CAACG,IAAK,yBAAf,CADT,GAEI,CAACF,OAAD,EAAU,GAAGD,KAAb,CAJwB;AAK9B,GAACD,MAAM,CAACH,cAAR,GAAyB,CAACI,KAAD,EAAQ;AAAEC,IAAAA;AAAF,GAAR,KACvBD,KAAK,CAACK,MAAN,CAAa,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAYA,EAAE,KAAKL,OAAhC;AAN4B,CAAL,CAA3B;AASA,MAAMI,MAAM,GAAGX,aAAa,CAAC,EAAD,EAAK;AAC/B,GAACK,MAAM,CAACF,YAAR,GAAuB,CAACU,CAAD,EAAI;AAAEN,IAAAA;AAAF,GAAJ,KAAoBA;AADZ,CAAL,CAA5B;AAIA,eAAeR,eAAe,CAAC;AAC7BK,EAAAA,KAD6B;AAE7BO,EAAAA;AAF6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {addContacts, deleteContacts, changeFilter } from './contact-action';\n\nconst items = createReducer([], {\n  [action.addContacts]: (state, { payload }) =>\n    state.find(({ name }) => name === payload.name)\n      ? alert(`${state.name} is already in contacts`)\n      : [payload, ...state],\n  [action.deleteContacts]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [action.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});"]},"metadata":{},"sourceType":"module"}