{"ast":null,"code":"import _toConsumableArray from\"/Users/janakozachka/Documents/GitHub/goit-react-hw-07-phonebook2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{configureStore,getDefaultMiddleware}from'@reduxjs/toolkit';import logger from'redux-logger';import{contactReducer}from'./contact';import{//persistStore,\n//persistReducer,\nFLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER}from'redux-persist';var middleware=[].concat(_toConsumableArray(getDefaultMiddleware({serializableCheck:{ignoredActions:[FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER]}})),[logger]);/* const contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n}; */var store=configureStore({reducer:{contacts:contactReducer},middleware:middleware,devTools:process.env.NODE_ENV==='development'});//const persistor = persistStore(store);\n//export default { store, persistor };\nexport default store;","map":{"version":3,"sources":["/Users/janakozachka/Documents/GitHub/goit-react-hw-07-phonebook2/src/redux/store.js"],"names":["configureStore","getDefaultMiddleware","logger","contactReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","middleware","serializableCheck","ignoredActions","store","reducer","contacts","devTools","process","env","NODE_ENV"],"mappings":"+LAAA,OAASA,cAAT,CAAyBC,oBAAzB,KAAqD,kBAArD,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,OAASC,cAAT,KAA+B,WAA/B,CACA,OACE;AACA;AACAC,KAHF,CAIEC,SAJF,CAKEC,KALF,CAMEC,OANF,CAOEC,KAPF,CAQEC,QARF,KASO,eATP,CAWA,GAAMC,CAAAA,UAAU,8BACXT,oBAAoB,CAAC,CACtBU,iBAAiB,CAAE,CACjBC,cAAc,CAAE,CAACR,KAAD,CAAQC,SAAR,CAAmBC,KAAnB,CAA0BC,OAA1B,CAAmCC,KAAnC,CAA0CC,QAA1C,CADC,CADG,CAAD,CADT,GAMdP,MANc,EAAhB,CASA;AACA;AACA;AACA;AACA,KAEA,GAAMW,CAAAA,KAAK,CAAGb,cAAc,CAAC,CAC3Bc,OAAO,CAAE,CACPC,QAAQ,CAAEZ,cADH,CADkB,CAI3BO,UAAU,CAAEA,UAJe,CAK3BM,QAAQ,CAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,aALR,CAAD,CAA5B,CAQA;AACA;AAEA,cAAeN,CAAAA,KAAf","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport { contactReducer } from './contact';\nimport {\n  //persistStore,\n  //persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n/* const contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n}; */\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n  middleware: middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n//const persistor = persistStore(store);\n//export default { store, persistor };\n\nexport default store;"]},"metadata":{},"sourceType":"module"}