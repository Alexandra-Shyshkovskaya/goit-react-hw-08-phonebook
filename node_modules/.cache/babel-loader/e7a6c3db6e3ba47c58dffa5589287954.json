{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport { contactReducer } from './contact';\nimport { //persistStore,\n//persistReducer,\nFLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nconst middleware = [...getDefaultMiddleware({\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n  }\n}), logger];\n/* const contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n}; */\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer\n  },\n  middleware: middleware,\n  devTools: process.env.NODE_ENV === 'development'\n}); //const persistor = persistStore(store);\n//export default { store, persistor };\n\nexport default store;","map":{"version":3,"sources":["/Users/janakozachka/Documents/GitHub/goit-react-hw-07-phonebook2/src/redux/store.js"],"names":["configureStore","getDefaultMiddleware","logger","contactReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","middleware","serializableCheck","ignoredActions","store","reducer","contacts","devTools","process","env","NODE_ENV"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SACE;AACA;AACAC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAWA,MAAMC,UAAU,GAAG,CACjB,GAAGT,oBAAoB,CAAC;AACtBU,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,cAAc,EAAE,CAACR,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADG,CAAD,CADN,EAMjBP,MANiB,CAAnB;AASA;AACA;AACA;AACA;AACA;;AAEA,MAAMW,KAAK,GAAGb,cAAc,CAAC;AAC3Bc,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAEZ;AADH,GADkB;AAI3BO,EAAAA,UAAU,EAAEA,UAJe;AAK3BM,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AALR,CAAD,CAA5B,C,CAQA;AACA;;AAEA,eAAeN,KAAf","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport { contactReducer } from './contact';\nimport {\n  //persistStore,\n  //persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n/* const contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n}; */\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n  middleware: middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n//const persistor = persistStore(store);\n//export default { store, persistor };\n\nexport default store;"]},"metadata":{},"sourceType":"module"}