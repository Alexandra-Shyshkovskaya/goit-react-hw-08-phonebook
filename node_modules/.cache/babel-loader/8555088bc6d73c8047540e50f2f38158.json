{"ast":null,"code":"var _jsxFileName = \"/Users/janakozachka/Documents/GitHub/goit-react-hw-06-phonebook/src/Components/ContactsList/ContactsList.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport contactsAction from '../../redux/contact/contact-action';\nimport style from \"./ContactsList.module.css\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactsList = ({\n  contacts,\n  deleteContacts\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: style.list,\n    children: contacts.map(({\n      id,\n      name,\n      number\n    }) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: style.item,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: style.textName,\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: style.textNumber,\n        children: number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: style.button,\n        onClick: () => deleteContacts(id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ContactsList;\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string\n  })),\n  deleteContacts: PropTypes.func\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(({\n    name\n  }) => name.toLowerCase().includes(normalizedFilter));\n};\n\nconst mapStateToProps = ({\n  contacts: {\n    items,\n    filter\n  }\n}) => ({\n  contacts: getVisibleContacts(items, filter)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteContacts: id => dispatch(contactsAction.deleteContacts(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsList\");","map":{"version":3,"sources":["/Users/janakozachka/Documents/GitHub/goit-react-hw-06-phonebook/src/Components/ContactsList/ContactsList.js"],"names":["React","connect","contactsAction","style","PropTypes","ContactsList","contacts","deleteContacts","list","map","id","name","number","item","textName","textNumber","button","propTypes","arrayOf","shape","string","func","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","mapStateToProps","items","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAkC;AACrD,sBACE;AAAI,IAAA,SAAS,EAAEJ,KAAK,CAACK,IAArB;AAAA,cACGF,QAAQ,CAACG,GAAT,CAAa,CAAC;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,IAAN;AAAYC,MAAAA;AAAZ,KAAD,kBACZ;AAAa,MAAA,SAAS,EAAET,KAAK,CAACU,IAA9B;AAAA,8BACE;AAAG,QAAA,SAAS,EAAEV,KAAK,CAACW,QAApB;AAAA,kBAA+BH;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAER,KAAK,CAACY,UAApB;AAAA,kBAAiCH;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAET,KAAK,CAACa,MAAvC;AAA+C,QAAA,OAAO,EAAE,MAAMT,cAAc,CAACG,EAAD,CAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,OAASA,EAAT;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAdD;;KAAML,Y;AAeNA,YAAY,CAACY,SAAb,GAAyB;AACvBX,EAAAA,QAAQ,EAAEF,SAAS,CAACc,OAAV,CACRd,SAAS,CAACe,KAAV,CAAgB;AACdT,IAAAA,EAAE,EAAEN,SAAS,CAACgB,MADA;AAEdT,IAAAA,IAAI,EAAEP,SAAS,CAACgB,MAFF;AAGdR,IAAAA,MAAM,EAAER,SAAS,CAACgB;AAHJ,GAAhB,CADQ,CADa;AAQvBb,EAAAA,cAAc,EAAEH,SAAS,CAACiB;AARH,CAAzB;;AAWA,MAAMC,kBAAkB,GAAG,CAACC,WAAD,EAAcC,MAAd,KAAyB;AAClD,QAAMC,gBAAgB,GAAGD,MAAM,CAACE,WAAP,EAAzB;AACA,SAAOH,WAAW,CAACC,MAAZ,CAAmB,CAAC;AAAEb,IAAAA;AAAF,GAAD,KACxBA,IAAI,CAACe,WAAL,GAAmBC,QAAnB,CAA4BF,gBAA5B,CADK,CAAP;AAGD,CALD;;AAOA,MAAMG,eAAe,GAAG,CAAC;AAAEtB,EAAAA,QAAQ,EAAE;AAAEuB,IAAAA,KAAF;AAASL,IAAAA;AAAT;AAAZ,CAAD,MAAsC;AAC5DlB,EAAAA,QAAQ,EAAEgB,kBAAkB,CAACO,KAAD,EAAQL,MAAR;AADgC,CAAtC,CAAxB;;AAIA,MAAMM,kBAAkB,GAAGC,QAAQ,KAAK;AACtCxB,EAAAA,cAAc,EAAEG,EAAE,IAAIqB,QAAQ,CAAC7B,cAAc,CAACK,cAAf,CAA8BG,EAA9B,CAAD;AADQ,CAAL,CAAnC;;AAIA,eAAeT,OAAO,CAAC2B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CzB,YAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport contactsAction from '../../redux/contact/contact-action';\nimport style from \"./ContactsList.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ContactsList = ({ contacts, deleteContacts }) => {\n  return (\n    <ul className={style.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={style.item}>\n          <p className={style.textName}>{name}</p>\n          <p className={style.textNumber}>{number}</p>\n          <button type=\"button\" className={style.button} onClick={() => deleteContacts(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  deleteContacts: PropTypes.func,\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteContacts: id => dispatch(contactsAction.deleteContacts(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);"]},"metadata":{},"sourceType":"module"}