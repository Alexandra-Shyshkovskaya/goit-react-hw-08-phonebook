{"ast":null,"code":"import _classCallCheck from\"/Users/janakozachka/Documents/GitHub/goit-react-hw-07-phonebook2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/janakozachka/Documents/GitHub/goit-react-hw-07-phonebook2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/janakozachka/Documents/GitHub/goit-react-hw-07-phonebook2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/janakozachka/Documents/GitHub/goit-react-hw-07-phonebook2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import Container from\"./Components/Container\";import ContactForm from\"./Components/ContactsForm\";import Filter from\"./Components/SearchFilter\";import ContactList from\"./Components/ContactsList\";import contactOperations from'./redux/contact/contact-operations';import{getLoading}from'./redux/contact/contact-selectors';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){_classCallCheck(this,App);return _super.apply(this,arguments);}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.fetchContacts();}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Phonebook\"}),/*#__PURE__*/_jsx(ContactForm,{}),/*#__PURE__*/_jsx(\"h2\",{children:\"Contacts\"}),/*#__PURE__*/_jsx(Filter,{}),this.props.isLoadingContacts&&/*#__PURE__*/_jsx(\"h1\",{children:\"Loading...\"}),/*#__PURE__*/_jsx(ContactList,{})]})});}}]);return App;}(Component);var mapStateToProps=function mapStateToProps(state){return{isLoadingContacts:getLoading(state)};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchContacts:function fetchContacts(){return dispatch(contactOperations.fetchContact());}};};export default connect(mapStateToProps,mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/janakozachka/Documents/GitHub/goit-react-hw-07-phonebook2/src/App.js"],"names":["React","Component","connect","Container","ContactForm","Filter","ContactList","contactOperations","getLoading","App","props","fetchContacts","isLoadingContacts","mapStateToProps","state","mapDispatchToProps","dispatch","fetchContact"],"mappings":"4sBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,2BAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,oCAA9B,CACA,OAASC,UAAT,KAA2B,mCAA3B,C,gJAEMC,CAAAA,G,yNACJ,4BAAoB,CAClB,KAAKC,KAAL,CAAWC,aAAX,GACD,C,sBACD,iBAAS,CACP,mBACE,sCACE,MAAC,SAAD,yBACE,iCADF,cAEE,KAAC,WAAD,IAFF,cAGE,gCAHF,cAIE,KAAC,MAAD,IAJF,CAKI,KAAKD,KAAL,CAAWE,iBAAX,eAAgC,kCALpC,cAME,KAAC,WAAD,IANF,GADF,EADF,CAYD,C,iBAjBeX,S,EAoBlB,GAAMY,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCF,iBAAiB,CAAEJ,UAAU,CAACM,KAAD,CADG,CAAL,EAA7B,CAGA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACtCL,aAAa,CAAE,+BAAMK,CAAAA,QAAQ,CAACT,iBAAiB,CAACU,YAAlB,EAAD,CAAd,EADuB,CAAL,EAAnC,CAIA,cAAef,CAAAA,OAAO,CAACW,eAAD,CAAkBE,kBAAlB,CAAP,CAA6CN,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Container from \"./Components/Container\";\nimport ContactForm from \"./Components/ContactsForm\";\nimport Filter from \"./Components/SearchFilter\";\nimport ContactList from \"./Components/ContactsList\";\nimport contactOperations from './redux/contact/contact-operations';\nimport { getLoading } from './redux/contact/contact-selectors';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n  render() {\n    return (\n      <>\n        <Container>\n          <h1>Phonebook</h1>\n          <ContactForm />\n          <h2>Contacts</h2>\n          <Filter />\n           {this.props.isLoadingContacts && <h1>Loading...</h1>}\n          <ContactList />\n        </Container>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoadingContacts: getLoading(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactOperations.fetchContact()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}