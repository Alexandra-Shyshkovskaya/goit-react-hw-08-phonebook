{"ast":null,"code":"var _jsxFileName = \"/Users/janakozachka/Documents/GitHub/goit-react-hw-08-phonebook/src/App.js\";\nimport React, { Component, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { authOperations } from './redux/auth';\nimport { connect } from 'react-redux';\nimport Container from './components/Container';\nimport AppBar from './components/AppBar';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport Backdrop from './components/Backdrop';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HomeView = /*#__PURE__*/lazy(_c = () => import('./views/HomeView'));\n_c2 = HomeView;\nconst RegisterView = /*#__PURE__*/lazy(_c3 = () => import('./views/RegisterView'));\n_c4 = RegisterView;\nconst LoginView = /*#__PURE__*/lazy(_c5 = () => import('./views/LoginView'));\n_c6 = LoginView;\nconst ContactsView = /*#__PURE__*/lazy(_c7 = () => import('./views/ContactsView'));\n_c8 = ContactsView;\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(AppBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(Backdrop, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 31\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(PublicRoute, {\n              exact: true,\n              path: \"/\",\n              component: HomeView\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PublicRoute, {\n              path: \"/login\",\n              restricted: true,\n              redirectTo: \"/contacts\",\n              component: LoginView\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n              path: \"/contacts\",\n              redirectTo: \"/login\",\n              component: ContactsView\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), \"         \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.onGetCurrentUser\n};\nexport default connect(null, mapDispatchToProps)(App);\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"HomeView$lazy\");\n$RefreshReg$(_c2, \"HomeView\");\n$RefreshReg$(_c3, \"RegisterView$lazy\");\n$RefreshReg$(_c4, \"RegisterView\");\n$RefreshReg$(_c5, \"LoginView$lazy\");\n$RefreshReg$(_c6, \"LoginView\");\n$RefreshReg$(_c7, \"ContactsView$lazy\");\n$RefreshReg$(_c8, \"ContactsView\");","map":{"version":3,"sources":["/Users/janakozachka/Documents/GitHub/goit-react-hw-08-phonebook/src/App.js"],"names":["React","Component","Suspense","lazy","Switch","authOperations","connect","Container","AppBar","PrivateRoute","PublicRoute","Backdrop","HomeView","RegisterView","LoginView","ContactsView","App","componentDidMount","props","onGetCurrentUser","render","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,IAArC,QAAiD,OAAjD;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAEA,MAAMC,QAAQ,gBAAGT,IAAI,MAAC,MAAM,OAAO,kBAAP,CAAP,CAArB;MAAMS,Q;AACN,MAAMC,YAAY,gBAAGV,IAAI,OAAC,MAAM,OAAO,sBAAP,CAAP,CAAzB;MAAMU,Y;AACN,MAAMC,SAAS,gBAAGX,IAAI,OAAC,MAAM,OAAO,mBAAP,CAAP,CAAtB;MAAMW,S;AACN,MAAMC,YAAY,gBAAGZ,IAAI,OAAC,MAAM,OAAO,sBAAP,CAAP,CAAzB;MAAMY,Y;;AAEN,MAAMC,GAAN,SAAkBf,SAAlB,CAA4B;AAC1BgB,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,gBAAX;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,SAAD;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAU,UAAA,QAAQ,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBAApB;AAAA,iCACE,QAAC,MAAD;AAAA,oCACE,QAAC,WAAD;AAAa,cAAA,KAAK,MAAlB;AAAmB,cAAA,IAAI,EAAC,GAAxB;AAA4B,cAAA,SAAS,EAAER;AAAvC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,WAAD;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,UAAU,MAFZ;AAGE,cAAA,UAAU,EAAC,WAHb;AAIE,cAAA,SAAS,EAAEE;AAJb;AAAA;AAAA;AAAA;AAAA,oBAFF,eAQE,QAAC,YAAD;AACE,cAAA,IAAI,EAAC,WADP;AAEE,cAAA,UAAU,EAAC,QAFb;AAGE,cAAA,SAAS,EAAEC;AAHb;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AA6BD;;AAlCyB;;AAqC5B,MAAMM,kBAAkB,GAAG;AACzBF,EAAAA,gBAAgB,EAAEd,cAAc,CAACc;AADR,CAA3B;AAIA,eAAeb,OAAO,CAAC,IAAD,EAAOe,kBAAP,CAAP,CAAkCL,GAAlC,CAAf","sourcesContent":["import React, { Component, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { authOperations } from './redux/auth';\nimport { connect } from 'react-redux';\nimport Container from './components/Container';\nimport AppBar from './components/AppBar';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport Backdrop from './components/Backdrop';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n  render() {\n    return (\n      <>\n        <Container>\n          <AppBar />\n          <Suspense fallback={<Backdrop />}>\n            <Switch>\n              <PublicRoute exact path=\"/\" component={HomeView} />\n              <PublicRoute\n                path=\"/login\"\n                restricted\n                redirectTo=\"/contacts\"\n                component={LoginView}\n              />\n              <PrivateRoute\n                path=\"/contacts\"\n                redirectTo=\"/login\"\n                component={ContactsView}\n              />\n            </Switch>\n          </Suspense>\n          {/* <h1>Phonebook</h1>\n          <ContactForm />\n          <h2>Contacts</h2>\n          <Filter />\n           {this.props.isLoadingContacts && <h1>Loading...</h1>}\n */}         {/*  <ContactList /> */}\n        </Container>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.onGetCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}