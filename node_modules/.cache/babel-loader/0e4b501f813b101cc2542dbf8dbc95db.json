{"ast":null,"code":"import _regeneratorRuntime from\"/Users/janakozachka/Documents/GitHub/goit-react-hw-08-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/janakozachka/Documents/GitHub/goit-react-hw-08-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import{fetchContactRequest,fetchContactSuccess,fetchContactError,addContactRequest,addContactSuccess,addContactError,deleteContactRequest,deleteContactSuccess,deleteContactError}from'./contact-action';//axios.defaults.baseURL = 'http://localhost:3000';\nvar fetchContact=function fetchContact(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(fetchContactRequest());_context.prev=1;_context.next=4;return axios.get('/contacts');case 4:_yield$axios$get=_context.sent;data=_yield$axios$get.data;dispatch(fetchContactSuccess(data));_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);dispatch(fetchContactError(_context.t0));case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};var addContacts=function addContacts(contactForm){return function(dispatch){var contact={name:contactForm.name,number:contactForm.number};dispatch(addContactRequest());axios.post('/contacts',contact).then(function(_ref2){var data=_ref2.data;return dispatch(addContactSuccess(data));}).catch(function(error){return dispatch(addContactError(error.message));});};};var deleteContacts=function deleteContacts(id){return function(dispatch){dispatch(deleteContactRequest());axios.delete(\"/contacts/\".concat(id)).then(function(){return dispatch(deleteContactSuccess(id));}).catch(function(error){return dispatch(deleteContactError(error.message));});};};// eslint-disable-next-line \nexport default{fetchContact:fetchContact,addContacts:addContacts,deleteContacts:deleteContacts};","map":{"version":3,"sources":["/Users/janakozachka/Documents/GitHub/goit-react-hw-08-phonebook/src/redux/contact/contact-operations.js"],"names":["axios","fetchContactRequest","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContact","dispatch","get","data","addContacts","contactForm","contact","name","number","post","then","catch","error","message","deleteContacts","id","delete"],"mappings":"yWAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,mBADF,CAEEC,mBAFF,CAGEC,iBAHF,CAIEC,iBAJF,CAKEC,iBALF,CAMEC,eANF,CAOEC,oBAPF,CAQEC,oBARF,CASEC,kBATF,KAUO,kBAVP,CAYA;AAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,kGAAM,iBAAMC,QAAN,4IACzBA,QAAQ,CAACV,mBAAmB,EAApB,CAAR,CADyB,sCAIAD,CAAAA,KAAK,CAACY,GAAN,CAAU,WAAV,CAJA,uCAIfC,IAJe,kBAIfA,IAJe,CAKvBF,QAAQ,CAACT,mBAAmB,CAACW,IAAD,CAApB,CAAR,CALuB,+EAOvBF,QAAQ,CAACR,iBAAiB,aAAlB,CAAR,CAPuB,oEAAN,gEAArB,CAgBA,GAAMW,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,WAAW,QAAI,UAAAJ,QAAQ,CAAI,CAC7C,GAAMK,CAAAA,OAAO,CAAG,CACdC,IAAI,CAAEF,WAAW,CAACE,IADJ,CAEdC,MAAM,CAAEH,WAAW,CAACG,MAFN,CAAhB,CAIAP,QAAQ,CAACP,iBAAiB,EAAlB,CAAR,CACAJ,KAAK,CACFmB,IADH,CACQ,WADR,CACqBH,OADrB,EAEGI,IAFH,CAEQ,mBAAGP,CAAAA,IAAH,OAAGA,IAAH,OAAcF,CAAAA,QAAQ,CAACN,iBAAiB,CAACQ,IAAD,CAAlB,CAAtB,EAFR,EAGGQ,KAHH,CAGS,SAAAC,KAAK,QAAIX,CAAAA,QAAQ,CAACL,eAAe,CAACgB,KAAK,CAACC,OAAP,CAAhB,CAAZ,EAHd,EAID,CAV8B,EAA/B,CAYA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,EAAE,QAAI,UAAAd,QAAQ,CAAI,CACvCA,QAAQ,CAACJ,oBAAoB,EAArB,CAAR,CACAP,KAAK,CACF0B,MADH,qBACuBD,EADvB,GAEGL,IAFH,CAEQ,iBAAMT,CAAAA,QAAQ,CAACH,oBAAoB,CAACiB,EAAD,CAArB,CAAd,EAFR,EAGGJ,KAHH,CAGS,SAAAC,KAAK,QAAIX,CAAAA,QAAQ,CAACF,kBAAkB,CAACa,KAAK,CAACC,OAAP,CAAnB,CAAZ,EAHd,EAID,CANwB,EAAzB,CAOA;AACA,cAAe,CAAEb,YAAY,CAAZA,YAAF,CAAgBI,WAAW,CAAXA,WAAhB,CAA6BU,cAAc,CAAdA,cAA7B,CAAf","sourcesContent":["import axios from 'axios';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contact-action';\n\n//axios.defaults.baseURL = 'http://localhost:3000';\n\nconst fetchContact = () => async dispatch => {\n  dispatch(fetchContactRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error));\n  }\n\n  // axios\n  //   .get('/contacts')\n  //   .then(({ data }) => dispatch(fetchContactSuccess(data)))\n  //   .catch(error => dispatch(fetchContactError(error)));\n};\n\nconst addContacts = contactForm => dispatch => {\n  const contact = {\n    name: contactForm.name,\n    number: contactForm.number,\n  };\n  dispatch(addContactRequest());\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error.message)));\n};\n\nconst deleteContacts = id => dispatch => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error.message)));\n};\n// eslint-disable-next-line \nexport default { fetchContact, addContacts, deleteContacts };"]},"metadata":{},"sourceType":"module"}