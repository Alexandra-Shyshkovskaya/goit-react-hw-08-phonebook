{"ast":null,"code":"import React from\"react\";import{connect}from'react-redux';import{changeFilter}from'../../redux/contact/contact-action';import style from'./Filter.module.css';import{getFilter}from'../../redux/contact/contact-selectors';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Filter=function Filter(_ref){var filter=_ref.filter,onHandleChange=_ref.onHandleChange;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:style.title,children:\"Find contacts by name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"filter\",value:filter,onChange:onHandleChange,className:style.input})]});};var mapStateToProps=function mapStateToProps(state){return{filter:getFilter(state)};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onHandleChange:function onHandleChange(event){return dispatch(changeFilter(event.currentTarget.value));}};};export default connect(mapStateToProps,mapDispatchToProps)(Filter);","map":{"version":3,"sources":["/Users/janakozachka/Documents/GitHub/goit-react-hw-08-phonebook/src/Components/SearchFilter/Filter.js"],"names":["React","connect","changeFilter","style","getFilter","Filter","filter","onHandleChange","title","input","mapStateToProps","state","mapDispatchToProps","dispatch","event","currentTarget","value"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,YAAT,KAA6B,oCAA7B,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,CAEA,OAASC,SAAT,KAA0B,uCAA1B,C,wFAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAgC,IAA7BC,CAAAA,MAA6B,MAA7BA,MAA6B,CAArBC,cAAqB,MAArBA,cAAqB,CAC7C,mBACE,oCACE,WAAI,SAAS,CAAEJ,KAAK,CAACK,KAArB,mCADF,cAEE,cACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,QAFP,CAGE,KAAK,CAAEF,MAHT,CAIE,QAAQ,CAAEC,cAJZ,CAKE,SAAS,CAAEJ,KAAK,CAACM,KALnB,EAFF,GADF,CAYD,CAbD,CAoBA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCL,MAAM,CAAEF,SAAS,CAACO,KAAD,CADe,CAAL,EAA7B,CAGA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACtCN,cAAc,CAAE,wBAAAO,KAAK,QAAID,CAAAA,QAAQ,CAACX,YAAY,CAACY,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAb,CAAZ,EADiB,CAAL,EAAnC,CAIA,cAAef,CAAAA,OAAO,CAACS,eAAD,CAAkBE,kBAAlB,CAAP,CAA6CP,MAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/contact/contact-action';\nimport style from './Filter.module.css';\nimport PropTypes from \"prop-types\";\nimport { getFilter } from '../../redux/contact/contact-selectors';\n\nconst Filter = ({ filter, onHandleChange }) => {\n  return (\n    <div>\n      <h3 className={style.title}>Find contacts by name</h3>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onHandleChange}\n        className={style.input}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onHandleChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filter: getFilter(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  onHandleChange: event => dispatch(changeFilter(event.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);"]},"metadata":{},"sourceType":"module"}