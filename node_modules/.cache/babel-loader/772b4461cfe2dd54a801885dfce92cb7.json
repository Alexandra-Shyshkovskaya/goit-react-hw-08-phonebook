{"ast":null,"code":"var _jsxFileName = \"/Users/janakozachka/Documents/GitHub/goit-react-hw-07-phonebook2/src/Components/ContactsList/ContactsList.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { contactOperations } from '../../redux/contact';\nimport style from \"./ContactsList.module.css\";\nimport PropTypes from \"prop-types\";\nimport { getVisibleContacts } from '../../redux/contact/contact-selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactsList = ({\n  contacts,\n  deleteContacts\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: style.list,\n    children: contacts.map(({\n      id,\n      name,\n      number\n    }) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: style.item,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: style.textName,\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: style.textNumber,\n        children: number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: style.button,\n        onClick: () => deleteContacts(id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ContactsList;\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string\n  })),\n  deleteContacts: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  contacts: getVisibleContacts(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteContacts: id => dispatch(contactOperations.deleteContacts(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsList\");","map":{"version":3,"sources":["/Users/janakozachka/Documents/GitHub/goit-react-hw-07-phonebook2/src/Components/ContactsList/ContactsList.js"],"names":["React","connect","contactOperations","style","PropTypes","getVisibleContacts","ContactsList","contacts","deleteContacts","list","map","id","name","number","item","textName","textNumber","button","propTypes","arrayOf","shape","string","func","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,uCAAnC;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAkC;AACrD,sBACE;AAAI,IAAA,SAAS,EAAEL,KAAK,CAACM,IAArB;AAAA,cACGF,QAAQ,CAACG,GAAT,CAAa,CAAC;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,IAAN;AAAYC,MAAAA;AAAZ,KAAD,kBACZ;AAAa,MAAA,SAAS,EAAEV,KAAK,CAACW,IAA9B;AAAA,8BACE;AAAG,QAAA,SAAS,EAAEX,KAAK,CAACY,QAApB;AAAA,kBAA+BH;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAET,KAAK,CAACa,UAApB;AAAA,kBAAiCH;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAEV,KAAK,CAACc,MAAvC;AAA+C,QAAA,OAAO,EAAE,MAAMT,cAAc,CAACG,EAAD,CAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,OAASA,EAAT;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAdD;;KAAML,Y;AAeNA,YAAY,CAACY,SAAb,GAAyB;AACvBX,EAAAA,QAAQ,EAAEH,SAAS,CAACe,OAAV,CACRf,SAAS,CAACgB,KAAV,CAAgB;AACdT,IAAAA,EAAE,EAAEP,SAAS,CAACiB,MADA;AAEdT,IAAAA,IAAI,EAAER,SAAS,CAACiB,MAFF;AAGdR,IAAAA,MAAM,EAAET,SAAS,CAACiB;AAHJ,GAAhB,CADQ,CADa;AAQvBb,EAAAA,cAAc,EAAEJ,SAAS,CAACkB;AARH,CAAzB;;AAYA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCjB,EAAAA,QAAQ,EAAEF,kBAAkB,CAACmB,KAAD;AADI,CAAL,CAA7B;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtClB,EAAAA,cAAc,EAAEG,EAAE,IAAIe,QAAQ,CAACxB,iBAAiB,CAACM,cAAlB,CAAiCG,EAAjC,CAAD;AADQ,CAAL,CAAnC;;AAIA,eAAeV,OAAO,CAACsB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnB,YAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport { contactOperations } from '../../redux/contact';\nimport style from \"./ContactsList.module.css\";\nimport PropTypes from \"prop-types\";\nimport { getVisibleContacts } from '../../redux/contact/contact-selectors';\n\nconst ContactsList = ({ contacts, deleteContacts }) => {\n  return (\n    <ul className={style.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={style.item}>\n          <p className={style.textName}>{name}</p>\n          <p className={style.textNumber}>{number}</p>\n          <button type=\"button\" className={style.button} onClick={() => deleteContacts(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  deleteContacts: PropTypes.func,\n};\n\n\nconst mapStateToProps = state => ({\n  contacts: getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteContacts: id => dispatch(contactOperations.deleteContacts(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);"]},"metadata":{},"sourceType":"module"}