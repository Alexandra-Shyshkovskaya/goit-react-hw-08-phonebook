{"ast":null,"code":"import _objectSpread from\"/Users/janakozachka/Documents/GitHub/goit-react-hw-08-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/janakozachka/Documents/GitHub/goit-react-hw-08-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"component\",\"isAuthenticated\",\"redirectTo\"];import React from'react';import{Route,Redirect}from'react-router-dom';import{connect}from'react-redux';import{authSelectors}from'../redux/auth';import{jsx as _jsx}from\"react/jsx-runtime\";var PublicRoute=function PublicRoute(_ref){var Component=_ref.component,isAuthenticated=_ref.isAuthenticated,redirectTo=_ref.redirectTo,routeProps=_objectWithoutProperties(_ref,_excluded);return/*#__PURE__*/_jsx(Route,_objectSpread(_objectSpread({},routeProps),{},{render:function render(props){return isAuthenticated&&routeProps.restricted?/*#__PURE__*/_jsx(Redirect,{to:redirectTo}):/*#__PURE__*/_jsx(Component,_objectSpread({},props));}}));};var mapStateToProps=function mapStateToProps(state){return{isAuthenticated:authSelectors.getIsAuthenticated(state)};};export default connect(mapStateToProps)(PublicRoute);","map":{"version":3,"sources":["/Users/janakozachka/Documents/GitHub/goit-react-hw-08-phonebook/src/Components/PublicRoute.js"],"names":["React","Route","Redirect","connect","authSelectors","PublicRoute","Component","component","isAuthenticated","redirectTo","routeProps","props","restricted","mapStateToProps","state","getIsAuthenticated"],"mappings":"0bAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,aAAT,KAA8B,eAA9B,C,2CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,UACPC,CAAAA,SADO,MAClBC,SADkB,CAElBC,eAFkB,MAElBA,eAFkB,CAGlBC,UAHkB,MAGlBA,UAHkB,CAIfC,UAJe,6DAMlB,KAAC,KAAD,gCACMA,UADN,MAEE,MAAM,CAAE,gBAAAC,KAAK,QACXH,CAAAA,eAAe,EAAIE,UAAU,CAACE,UAA9B,cACE,KAAC,QAAD,EAAU,EAAE,CAAEH,UAAd,EADF,cAGE,KAAC,SAAD,kBAAeE,KAAf,EAJS,EAFf,GANkB,EAApB,CAkBA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCN,eAAe,CAAEJ,aAAa,CAACW,kBAAd,CAAiCD,KAAjC,CADe,CAAL,EAA7B,CAIA,cAAeX,CAAAA,OAAO,CAACU,eAAD,CAAP,CAAyBR,WAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);"]},"metadata":{},"sourceType":"module"}