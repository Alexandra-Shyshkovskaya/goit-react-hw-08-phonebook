{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { fetchContactRequest, fetchContactSuccess, fetchContactError, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError, changeFilter } from './contact-action';\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, {\n    payload\n  }) => payload,\n  [addContactSuccess]: (state, {\n    payload\n  }) => state.find(({\n    name\n  }) => name === payload.name) ? alert(`${state.name} is already in contacts`) : [payload, ...state],\n  [deleteContactSuccess]: (state, {\n    payload\n  }) => state.filter(({\n    id\n  }) => id !== payload)\n});\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false\n});\nconst filter = createReducer('', {\n  [changeFilter]: (_, {\n    payload\n  }) => payload\n});\nconst error = createReducer(null, {});\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error\n});","map":{"version":3,"sources":["/Users/janakozachka/Documents/GitHub/goit-react-hw-07-phonebook2/src/redux/contact/contact-reducer.js"],"names":["combineReducers","createReducer","fetchContactRequest","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","_","payload","state","find","name","alert","filter","id","loading","error"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,iBAHF,EAIEC,iBAJF,EAKEC,iBALF,EAMEC,eANF,EAOEC,oBAPF,EAQEC,oBARF,EASEC,kBATF,EAUEC,YAVF,QAWO,kBAXP;AAaA,MAAMC,KAAK,GAAGX,aAAa,CAAC,EAAD,EAAK;AAC9B,GAACE,mBAAD,GAAuB,CAACU,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAoBA,OADb;AAE9B,GAACR,iBAAD,GAAqB,CAACS,KAAD,EAAQ;AAAED,IAAAA;AAAF,GAAR,KACnBC,KAAK,CAACC,IAAN,CAAW,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAcA,IAAI,KAAKH,OAAO,CAACG,IAA1C,IACIC,KAAK,CAAE,GAAEH,KAAK,CAACE,IAAK,yBAAf,CADT,GAEI,CAACH,OAAD,EAAU,GAAGC,KAAb,CALwB;AAM9B,GAACN,oBAAD,GAAwB,CAACM,KAAD,EAAQ;AAAED,IAAAA;AAAF,GAAR,KACtBC,KAAK,CAACI,MAAN,CAAa,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAYA,EAAE,KAAKN,OAAhC;AAP4B,CAAL,CAA3B;AAUA,MAAMO,OAAO,GAAGpB,aAAa,CAAC,KAAD,EAAQ;AACnC,GAACC,mBAAD,GAAuB,MAAM,IADM;AAEnC,GAACC,mBAAD,GAAuB,MAAM,KAFM;AAGnC,GAACC,iBAAD,GAAqB,MAAM,KAHQ;AAKnC,GAACC,iBAAD,GAAqB,MAAM,IALQ;AAMnC,GAACC,iBAAD,GAAqB,MAAM,KANQ;AAOnC,GAACC,eAAD,GAAmB,MAAM,KAPU;AASnC,GAACC,oBAAD,GAAwB,MAAM,IATK;AAUnC,GAACC,oBAAD,GAAwB,MAAM,KAVK;AAWnC,GAACC,kBAAD,GAAsB,MAAM;AAXO,CAAR,CAA7B;AAcA,MAAMS,MAAM,GAAGlB,aAAa,CAAC,EAAD,EAAK;AAC/B,GAACU,YAAD,GAAgB,CAACE,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KAAoBA;AADL,CAAL,CAA5B;AAIA,MAAMQ,KAAK,GAAGrB,aAAa,CAAC,IAAD,EAAO,EAAP,CAA3B;AAEA,eAAeD,eAAe,CAAC;AAC7BY,EAAAA,KAD6B;AAE7BO,EAAAA,MAF6B;AAG7BE,EAAAA,OAH6B;AAI7BC,EAAAA;AAJ6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './contact-action';\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) =>\n    state.find(({ name }) => name === payload.name)\n      ? alert(`${state.name} is already in contacts`)\n      : [payload, ...state],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});"]},"metadata":{},"sourceType":"module"}