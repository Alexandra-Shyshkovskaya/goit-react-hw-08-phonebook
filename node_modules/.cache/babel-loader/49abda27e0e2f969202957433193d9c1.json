{"ast":null,"code":"var _jsxFileName = \"/Users/janakozachka/Documents/GitHub/goit-react-hw-08-phonebook/src/Components/PublicRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => /*#__PURE__*/_jsxDEV(Route, { ...routeProps,\n  render: props => isAuthenticated && routeProps.restricted ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: redirectTo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n\n_c = PublicRoute;\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state)\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"sources":["/Users/janakozachka/Documents/GitHub/goit-react-hw-08-phonebook/src/Components/PublicRoute.js"],"names":["React","Route","Redirect","connect","authSelectors","PublicRoute","component","Component","isAuthenticated","redirectTo","routeProps","props","restricted","mapStateToProps","state","getIsAuthenticated"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,eAA9B;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,SAAS,EAAEC,SADQ;AAEnBC,EAAAA,eAFmB;AAGnBC,EAAAA,UAHmB;AAInB,KAAGC;AAJgB,CAAD,kBAMlB,QAAC,KAAD,OACMA,UADN;AAEE,EAAA,MAAM,EAAEC,KAAK,IACXH,eAAe,IAAIE,UAAU,CAACE,UAA9B,gBACE,QAAC,QAAD;AAAU,IAAA,EAAE,EAAEH;AAAd;AAAA;AAAA;AAAA;AAAA,UADF,gBAGE,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,QANF;;KAAMN,W;;AAkBN,MAAMQ,eAAe,GAAGC,KAAK,KAAK;AAChCN,EAAAA,eAAe,EAAEJ,aAAa,CAACW,kBAAd,CAAiCD,KAAjC;AADe,CAAL,CAA7B;;AAIA,eAAeX,OAAO,CAACU,eAAD,CAAP,CAAyBR,WAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);"]},"metadata":{},"sourceType":"module"}