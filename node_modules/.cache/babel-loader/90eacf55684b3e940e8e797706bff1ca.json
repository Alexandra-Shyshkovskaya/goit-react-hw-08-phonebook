{"ast":null,"code":"import axios from 'axios';\nimport { fetchContactRequest, fetchContactSuccess, fetchContactError, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError } from './contact-action'; //axios.defaults.baseURL = 'http://localhost:3000';\n\nconst fetchContact = () => async dispatch => {\n  dispatch(fetchContactRequest());\n\n  try {\n    const {\n      data\n    } = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error));\n  } // axios\n  //   .get('/contacts')\n  //   .then(({ data }) => dispatch(fetchContactSuccess(data)))\n  //   .catch(error => dispatch(fetchContactError(error)));\n\n};\n\nconst addContacts = contactForm => dispatch => {\n  const contact = {\n    name: contactForm.name,\n    number: contactForm.number\n  };\n  dispatch(addContactRequest());\n  axios.post('/contacts', contact).then(({\n    data\n  }) => dispatch(addContactSuccess(data))).catch(error => dispatch(addContactError(error.message)));\n};\n\nconst deleteContacts = id => dispatch => {\n  dispatch(deleteContactRequest());\n  axios.delete(`/contacts/${id}`).then(() => dispatch(deleteContactSuccess(id))).catch(error => dispatch(deleteContactError(error.message)));\n}; // eslint-disable-next-line \n\n\nexport default {\n  fetchContact,\n  addContacts,\n  deleteContacts\n};","map":{"version":3,"sources":["/Users/janakozachka/Documents/GitHub/goit-react-hw-08-phonebook/src/redux/contact/contact-operations.js"],"names":["axios","fetchContactRequest","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContact","dispatch","data","get","error","addContacts","contactForm","contact","name","number","post","then","catch","message","deleteContacts","id","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,iBAHF,EAIEC,iBAJF,EAKEC,iBALF,EAMEC,eANF,EAOEC,oBAPF,EAQEC,oBARF,EASEC,kBATF,QAUO,kBAVP,C,CAYA;;AAEA,MAAMC,YAAY,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC3CA,EAAAA,QAAQ,CAACV,mBAAmB,EAApB,CAAR;;AAEA,MAAI;AACF,UAAM;AAAEW,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,GAAN,CAAU,WAAV,CAAvB;AACAF,IAAAA,QAAQ,CAACT,mBAAmB,CAACU,IAAD,CAApB,CAAR;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdH,IAAAA,QAAQ,CAACR,iBAAiB,CAACW,KAAD,CAAlB,CAAR;AACD,GAR0C,CAU3C;AACA;AACA;AACA;;AACD,CAdD;;AAgBA,MAAMC,WAAW,GAAGC,WAAW,IAAIL,QAAQ,IAAI;AAC7C,QAAMM,OAAO,GAAG;AACdC,IAAAA,IAAI,EAAEF,WAAW,CAACE,IADJ;AAEdC,IAAAA,MAAM,EAAEH,WAAW,CAACG;AAFN,GAAhB;AAIAR,EAAAA,QAAQ,CAACP,iBAAiB,EAAlB,CAAR;AACAJ,EAAAA,KAAK,CACFoB,IADH,CACQ,WADR,EACqBH,OADrB,EAEGI,IAFH,CAEQ,CAAC;AAAET,IAAAA;AAAF,GAAD,KAAcD,QAAQ,CAACN,iBAAiB,CAACO,IAAD,CAAlB,CAF9B,EAGGU,KAHH,CAGSR,KAAK,IAAIH,QAAQ,CAACL,eAAe,CAACQ,KAAK,CAACS,OAAP,CAAhB,CAH1B;AAID,CAVD;;AAYA,MAAMC,cAAc,GAAGC,EAAE,IAAId,QAAQ,IAAI;AACvCA,EAAAA,QAAQ,CAACJ,oBAAoB,EAArB,CAAR;AACAP,EAAAA,KAAK,CACF0B,MADH,CACW,aAAYD,EAAG,EAD1B,EAEGJ,IAFH,CAEQ,MAAMV,QAAQ,CAACH,oBAAoB,CAACiB,EAAD,CAArB,CAFtB,EAGGH,KAHH,CAGSR,KAAK,IAAIH,QAAQ,CAACF,kBAAkB,CAACK,KAAK,CAACS,OAAP,CAAnB,CAH1B;AAID,CAND,C,CAOA;;;AACA,eAAe;AAAEb,EAAAA,YAAF;AAAgBK,EAAAA,WAAhB;AAA6BS,EAAAA;AAA7B,CAAf","sourcesContent":["import axios from 'axios';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contact-action';\n\n//axios.defaults.baseURL = 'http://localhost:3000';\n\nconst fetchContact = () => async dispatch => {\n  dispatch(fetchContactRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error));\n  }\n\n  // axios\n  //   .get('/contacts')\n  //   .then(({ data }) => dispatch(fetchContactSuccess(data)))\n  //   .catch(error => dispatch(fetchContactError(error)));\n};\n\nconst addContacts = contactForm => dispatch => {\n  const contact = {\n    name: contactForm.name,\n    number: contactForm.number,\n  };\n  dispatch(addContactRequest());\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error.message)));\n};\n\nconst deleteContacts = id => dispatch => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error.message)));\n};\n// eslint-disable-next-line \nexport default { fetchContact, addContacts, deleteContacts };"]},"metadata":{},"sourceType":"module"}